name: Continuous Integration

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
  pull_request:

jobs:
  CI:
    name: ${{ matrix.name }} - ${{ matrix.configuration }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        configuration: [Debug, Release]
        os: [windows-2022, windows-2019, ubuntu-20.04, ubuntu-22.04, macos-10.15, macos-11]
        include:
        - os: ubuntu-20.04
          name: Ubuntu 20.04 (GCC 9)
          c: gcc-9
          cpp: g++-9
        - os: ubuntu-20.04
          name: Ubuntu 20.04 (GCC 10)
          c: gcc-10
          cpp: g++-10
        - os: ubuntu-22.04
          name: Ubuntu 22.04 (GCC 11)
          c: gcc-11
          cpp: g++-11
        - os: ubuntu-20.04
          name: Ubuntu 20.04 (Clang 10)
          c: clang-10
          cpp: clang++-10
        - os: ubuntu-22.04
          name: Ubuntu 22.04 (Clang 11)
          c: clang-10
          cpp: clang++-10
        - os: windows-2019
          name: Windows Server 2019 (VS 2019)
          c: ''
          cpp: ''
        - os: windows-2022
          name: Windows Server 2022 (VS 2022)
          c: ''
          cpp: ''
        - os: macos-10.15
          name: macOS Catalina (Apple-Clang 12)
          c: ''
          cpp: ''
        - os: macos-11
          name: macOS Big Sur (Apple-Clang 13)
          c: ''
          cpp: ''
        
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Change Compiler
        if: !contains('', matrix.c)
        run: export CC=${{ matrix.c }} && export CXX=${{ matrix.cpp }}

      - name: Configure CrossGuid
        id: config
        run: cmake -S . -B build

      - uses: novelrt/setup-cpp@v1
      - name: Build CrossGuid - ${{ matrix.configuration }}
        if: steps.config.outcome == 'success'
        id: build
        run: cmake --build build

      - name: Install CrossGuid - ${{ matrix.configuration }}
        if: steps.build.outcome == 'success'
        run: cmake --install build --config "${{ matrix.configuration }}" --prefix "${{ matrix.configuration }}/install"

      - name: Test CrossGuid - ${{ matrix.configuration }}
        if: steps.build.outcome == 'success'
        run: cd build/test && ctest